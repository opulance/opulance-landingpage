name: publish-to-github-pages
on:
  push:
    branches:
      - main

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v4

      - name: Setup Node.js ⚙️ - Cache dependencies ⚡ - Install dependencies 🔧
        uses: ./.github/workflows/setup-node

      - name: Setup Pages ⚙️
        uses: actions/configure-pages@v4
        with:
          static_site_generator: next

      - name: Build with Next.js 🏗️
        run: |
          # Build Next.js project
          npm run build
          
          # The build directory should be "out" with Next.js 15 and output: "export"
          echo "Checking for build output directory..."
          ls -la
          
          # Debug output of build directories
          echo "Next.js output directories:"
          find . -name "out" -type d
          
          # Copy build output from .next to out if needed
          if [ ! -d "out" ] || [ "$(find out -maxdepth 1 -type f -not -path "*/\.*" | wc -l)" -lt 1 ]; then
            echo "Static export directory missing or empty, looking elsewhere..."
            if [ -d ".next/server/app" ]; then
              echo "Found .next/server/app, copying..."
              mkdir -p out
              cp -r .next/server/app/* out/
            fi
          fi
          
          # Create .nojekyll file
          touch out/.nojekyll
          
          # Copy any static files from public
          if [ -d "public" ]; then
            echo "Copying public directory to out..."
            cp -r public/* out/ || true
          fi
          
          # Final debugging output
          echo "Final out directory contents:"
          find out -type f -not -path "*/\.*" | sort || echo "No files found in out directory"
          echo "Total files in out directory: $(find out -type f -not -path "*/\.*" | wc -l)"

      - name: Upload artifact 📡
        uses: actions/upload-pages-artifact@v3
        with:
          path: out

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Publish to GitHub Pages 🚀
        id: deployment
        uses: actions/deploy-pages@v4